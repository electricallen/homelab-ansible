  - name: allow traffic on ports {{ httpport }} and {{ httpsport }}
    ufw:
     rule: allow
     port: "{{ item }}"
    loop:
      - "{{ httpport | string }}"
      - "{{ httpsport | string }}"
    become: yes

  - name: ensure group "docker" exists
    group:
      name: docker
      state: present
    become: yes

  - name: add {{ username }} to docker group
    user:
      name: "{{ username }}"
      groups: docker
      append: yes
    become: yes
    register: docker_group
    
  - name: reset ssh connection to allow group changes to affect {{ username }}
    meta: reset_connection
# not supported until Ansible 2.11
#    when: docker_group.changed

  - name: enable docker service
    service:
      name: docker
      state: started
      enabled: yes
    become: yes

  - name: index directories
    find:
      paths: templates/
      recurse: true
      file_type: directory
    register: directories
    delegate_to: localhost

  - name: index files
    find:
      paths: templates/
      recurse: true
      patterns: '*.j2'
    register: files
    delegate_to: localhost
    
  - name: create directories
    file:
      path: "{{ item | regex_replace('^templates', '~') }}"
      state: directory
      owner: "{{ username }}"
      group: docker
      mode: '0770'
    loop: "{{ directories.files | map(attribute='path') | list }}"
    when: item | regex_replace('^templates\/([^\/]*)\/?.*$', '\\1') in containers

  - name: create files from templates
    template:
      src: "{{ item }}"
      dest: "{{ item | regex_replace('^templates', '~') | regex_replace('.j2$', '') }}"
      owner: "{{ username }}"
      group: docker
      mode: '0770'
    loop: "{{ files.files | map(attribute='path') | list }}"
    when: item | regex_replace('^templates\/([^\/]*)\/.*$', '\\1') in containers

  - name: start containers (may take a long time)
    docker_compose: 
      project_src: ~/{{ item }}/
    loop: "{{ containers }}"